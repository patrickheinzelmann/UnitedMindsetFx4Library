<?xml version="1.0" encoding="UTF-8"?>

<!--

Copyright (c) 2010. UnitedMindset
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are not permitted without 
explicit written consent from UnitedMindset:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the 
following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the 
following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of UnitedMindset nor the names of its contributors may be used to endorse or 
promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

@ignore

-->

<project name="Build File" basedir="." default="build">
	
	<!-- file description -->
	<description>Build Script</description>
	
	<!--location of property file -->
	<property file="${basedir}/build.properties" description="your specific properities for builds" />
	<property file="${basedir}/base.properties" description="base properities for builds" />
	
	<!-- additional tasks -->
	<taskdef name="compc" classname="flex.ant.CompcTask" classpath="${FLEX_TASKS}"/>
	<taskdef name="asdoc" classname="flex.ant.AsDocTask" classpath="${FLEX_TASKS}"/>
    
    <!--
    
    
        Build
    
    
    -->
    
	<target name="build" description="compiles application">
		<antcall target="init"/>
		<!--
		<antcall target="compile"/>
		-->
		<antcall target="asdoc"/>
	</target>
	
	<target name="compile"
		description="Compiles the AIR application to a SWF file and places SWF in a temp directory to be packaged.">
		<compc output="${RELEASE_DIR}/${LIBRARY_NAME}.swc"
			locale="${LOCALE}"
			debug="${DEBUG_FLAG}"
			failonerror="true"
			accessible="true">
			<source-path path-element="${SOURCE_DIR}"/>
			<external-library-path file="${FLEX_HOME}/frameworks/libs/air/airglobal.swc" append="true"/>
			<library-path dir="${PROJECT_DIR}/libs" includes="*.swc" append="true"/>
			<include-sources dir="${SOURCE_DIR}" includes="*"/>
            <source-path path-element="${SOURCE_DIR}" />
            <compiler.library-path dir="${LIBRARIES_DIR}" append="true">
				<include name="*.swc" />
			</compiler.library-path>
            <metadata>
                <creator>Jonathan Campos</creator>
                <publisher>UnitedMindset</publisher>
                <language>EN</language>
            </metadata>
            <arg line="-namespace ${NAMESPACE} ${MANIFEST_DIR}"/>
            <arg line="-include-namespaces ${NAMESPACE}"/>
            <include-file name="${DEFAULT_CSS_FILE}" path="${DEFAULT_CSS_DIR}"/>
		</compc>
	</target>
	
	<target name="init" depends="clean"
	description="Cleans the deploy file">
		<mkdir dir="${RELEASE_DIR}"/>
	</target>
	
	<target name="clean"
		description="Cleans up old files.">
		<delete dir="${RELEASE_DIR}" failOnError="false" includeEmptyDirs="true" />
	</target>
    
    <!--
    
    
        Asdocs
    
    
    -->

	<target name="cleanasdoc"
		description="Delete the existing output folder and files and then regenerate the output folder">
		<delete dir="${ASDOC_DIR}" failOnError="false" includeEmptyDirs="true"/>
		<mkdir dir="${ASDOC_DIR}"/>
	</target>

	<target name="asdoc" depends="cleanasdoc"
		description="Run the ASDoc executable and generate the ASDocs to the new output folder">
        <exec executable="${ASDOC_EXE}" failonerror="false">
            <arg line="-load-config '${FLEX_FRAMEWORKS}/flex-config.xml'"/>
            <arg line="-doc-sources '${SOURCE_DIR}'"/>
            <arg line="-doc-sources '${LIBRARIES_DIR}'"/>
            <arg line="-main-title '${ASDOC_MAIN_TITLE}'"/>
            <arg line="-window-title '${ASDOC_WINDOW_TITLE}'"/>
            <arg line="-output '${ASDOC_DIR}'"/>
            <arg line="-footer '${ASDOC_FOOTER}'"/>
            <arg line="-examples-path '${ASDOC_EXAMPLES_PATH}'"/>
        </exec>
    </target>
	
</project>